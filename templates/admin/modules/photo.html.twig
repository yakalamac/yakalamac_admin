<div id="photo-storage" class="row g-3 justify-content-center">
    <script type="module">
        import { apiGet, apiDelete, apiPatch } from '{{ asset('script/modules/api-controller/ApiController.js') }}';
        const pnonce = Date.now().toString();
        $(document).ready(async ()=>{
            const photoBuilder = photo=>`
                <div class="col-6 col-md-4 col-lg-3" id="${photo.id}" data-image-container>
                    <div class="card border-0 shadow-sm rounded-3 overflow-hidden">
                        <div style="height: 300px; background: #000;">
                            <img src="${photo.path}?width=300&height=300" alt="${photo.altTag ?? 'No alt-tag'}" class="w-100 h-100 object-fit-cover">
                        </div>
                        <div class="card-body p-2">
                            <input type="text" class="form-control form-control-sm mb-1 fw-semibold text-truncate"
                                   id="${photo.id}-title" placeholder="BaÅŸlÄ±k" value="${photo.title ?? ''}" name="title">
                            <input type="text" class="form-control form-control-sm mb-1 text-truncate"
                                   id="${photo.id}-altTag" placeholder="Alt Etiket" value="${photo.altTag??''}" name="altTag">
                            <small class="text-muted d-block">ðŸ“… ${photo.createdAt??''} &emsp; | &emsp; ðŸ”„ ${photo.updatedAt??''}</small>
                        </div>
                        <div class="d-flex gap-1 p-2">
                            <button class="btn btn-success btn-sm flex-fill fw-semibold ${pnonce}-photo-update-btn" data-photo-id="${photo.id}">
                                <i class="fa fa-trash me-1"></i> GÃ¼ncelle
                            </button>
                            <button class="btn btn-danger btn-sm flex-fill fw-semibold ${pnonce}-photo-delete-btn" data-photo-id="${photo.id}">
                                <i class="fa fa-trash me-1"></i> Sil
                            </button>
                        </div>
                    </div>
                </div>
            `;
    
            apiGet(`/_json/place/${window.transporter.place.id}/photos`, {
                success: (success)=>{
                    Array.from(success['hydra:member']).forEach(member=> $('#photo-storage').append(photoBuilder(member)));
                }
            });

            $(document).on('click', `button.${pnonce}-photo-update-btn`, function () {
                const id = $(this).data('photo-id');

                if(id === undefined || id === null || id === 'undefined' || id === 'null') {
                    toastr.error('FotoÄŸraf gÃ¼ncellenirken bir hata oluÅŸtu.');
                    throw new Error('No valid id');
                }

                const init = {};
                $(this).prop('disabled', true);
                $(this).text('GÃ¼ncelleniyor...');
                const button = $(this);
                const intervalKeyId = setInterval(()=>{
                    let dots = button.text().replace('GÃ¼ncelleniyor', '').slice(1);

                    if(dots.length < 1) {
                        dots = '...';
                    }

                    let text = 'GÃ¼ncelleniyor' + dots;
                    button.text(text);
                }, 200);
                const $this = button.closest('div[data-image-container]');

                ['input[placeholder="BaÅŸlÄ±k"]','input[placeholder="Alt Etiket"]'].forEach(s=>{
                   const current =  $this.find(s);
                   if(current.length === 0) return;
                   let value = current.val();
                   const key = current.attr('name');
                   if(typeof key !== "string") return;
                   if(typeof value !== "string") {
                       init[key] = null;
                       return;
                   }

                   init[key] = value.trim();

                   if(init[key].length === 0) init[key] = null;
                });

                function reset(){
                    button.prop('disabled', false);
                    clearInterval(intervalKeyId);
                    button.text('GÃ¼ncelle');
                }

                if(Object.keys(init).length === 0) {
                    return reset();
                }

                apiPatch(`/_json/place/photos/${id}`, init, {
                    successMessage:'BaÅŸarÄ±yla gÃ¼ncellendi.',
                    success: reset,
                    errorMessage:'GÃ¼ncelleme sÄ±rasÄ±nda bir hata oluÅŸtu.',
                    error: reset, failure: reset
                });
            });



            $(document).on('click', `button.${pnonce}-photo-delete-btn`, function () {
                const id = $(this).data('photo-id');

                if(id === undefined || id === null || id === 'undefined' || id === 'null') {
                    toastr.error('FotoÄŸraf silinirken bir hata oluÅŸtu.');
                    throw new Error('No valid id');
                }

                $(this).prop('disabled', true);
                const $this = $(this);

                apiDelete(`/_json/place/photos/${id}`, {
                    success:r=> {
                        console.log(r);
                        $this.closest('div[data-image-container]').remove();
                    },
                    error: e=>{
                        console.error(e);
                        $this.prop('disabled', false);
                    },
                    failure: f=>{
                        console.error(f);
                        $this.prop('disabled', false);
                    }
                });
            });
        });
    </script>
</div>