<div id="video-storage" class="row g-3 justify-content-center">
    <script type="module" async>
        import {apiGet, apiDelete} from "{{ asset('script/modules/api-controller/ApiController.js') }}";
        const vnonce = Date.now().toString();
        const videoBuilder = video=> `
        <div class="col-6 col-md-4 col-lg-3" id="${video.id}">
            <div class="card border-0 shadow-sm rounded-3 overflow-hidden " data-video-container>
                <div class="ratio ratio-16x9 bg-dark">
                    <iframe src="https://iframe.mediadelivery.net/embed/332422/${video.src.replace('bunny-stream://', '')}?autoplay=false&loop=false&muted=false&preload=false&responsive=true"
                            class="w-100 h-100" loading="lazy" allowfullscreen
                            allow="accelerometer; gyroscope; autoplay; encrypted-media; picture-in-picture">
                    </iframe>
                </div>
                <div class="card-body p-2">
                    <input type="text" class="form-control form-control-sm mb-1 fw-semibold text-truncate"
                           id="${video.id}-title" placeholder="BaÅŸlÄ±k" value="${video.title ?? ''}">
                    <input type="text" class="form-control form-control-sm mb-1 text-truncate"
                           id="${video.id}-altTag" placeholder="Etiket" value="${video.altTag ?? ''}">
                    <small class="text-muted d-block">ðŸ“… ${video.createdAt} &emsp; | &emsp; ðŸ”„ ${video.updatedAt}</small>
                </div>
                <div class="d-flex gap-1 p-2">
                    <button class="btn btn-success btn-sm flex-fill fw-semibold ${vnonce}-video-update-btn" data-video-id="${video.id}">
                        <i class="fa fa-save me-1"></i> GÃ¼ncelle
                    </button>
                    <button class="btn btn-danger btn-sm flex-fill fw-semibold ${vnonce}-video-delete-btn" data-video-id="${video.id}">
                        <i class="fa fa-trash me-1"></i> Sil
                    </button>
                </div>
            </div>
        </div>`;

        apiGet(`/_json/place/${window.transporter.place.id}/videos`, {
            success: (success)=>{
                Array.from(success['hydra:member']).forEach(member=>{
                    $('#video-storage').append(videoBuilder(member))
                });

                $(document).on('click', `button.${vnonce}-video-update-btn`, function () {
                    const id = $(this).data('video-id');
                    console.log(id)

                    if(id === undefined || id === null || id === 'undefined' || id === 'null') {
                        toastr.error('Video gÃ¼ncellenirken bir hata oluÅŸtu.');
                        throw new Error('No valid id');
                    }

                    toastr.error('Video gÃ¼nceleme iÅŸlemi ÅŸuanlÄ±k yok')
                    return null ;
                    const init = {};
                    $(this).prop('disabled', true);
                    $(this).text('GÃ¼ncelleniyor...');
                    const button = $(this);
                    const intervalKeyId = setInterval(()=>{
                        let dots = button.text().replace('GÃ¼ncelleniyor', '').slice(1);

                        if(dots.length < 1) {
                            dots = '...';
                        }

                        let text = 'GÃ¼ncelleniyor' + dots;
                        button.text(text);
                    }, 200);
                    const $this = button.closest('div[data-video-container]');

                    ['input[placeholder="BaÅŸlÄ±k"]','input[placeholder="Etiket"]'].forEach(s=>{
                        const current =  $this.find(s);
                        if(current.length === 0) return;
                        let value = current.val();
                        const key = current.attr('name');
                        if(typeof key !== "string") return;
                        if(typeof value !== "string") {
                            init[key] = null;
                            return;
                        }

                        init[key] = value.trim();

                        if(init[key].length === 0) init[key] = null;
                    });

                    function reset(){
                        button.prop('disabled', false);
                        clearInterval(intervalKeyId);
                        button.text('GÃ¼ncelle');
                    }

                    if(Object.keys(init).length === 0) {
                        return reset();
                    }

                    apiPatch(`/_json/place/videos/${id}`, init, {
                        successMessage:'BaÅŸarÄ±yla gÃ¼ncellendi.',
                        success: reset,
                        errorMessage:'GÃ¼ncelleme sÄ±rasÄ±nda bir hata oluÅŸtu.',
                        error: reset, failure: reset
                    });
                });

                $(`.${vnonce}-video-delete-btn`).on('click',function () {

                    //console.log(vnonce)
                    const id = $(this).data('video-id');
                    console.log(id)

                    if(id === undefined || id === null || id === 'undefined' || id === 'null') {
                        toastr.error('Video silme iÅŸleminde bir hata oluÅŸtu');
                        throw new Error('No valid id');
                    }

                    $(this).prop('disabled', true);
                    const $this = $(this);

                    apiDelete(`/_json/place/videos/${id}`, {
                        success:r=> {
                            console.log(r);
                            $this.closest('div[data-video-container]').remove();
                        },
                        error: e=>{
                            console.error(e);
                            $this.prop('disabled', false);
                        },
                        failure: f=>{
                            console.error(f);
                            $this.prop('disabled', false);
                        }
                    })
                });
            }
        });
    </script>
</div>